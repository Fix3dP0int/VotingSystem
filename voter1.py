import socket
import rsa
import hashlib
import sys
import random
def hash(m):
    return hashlib.sha256(str(m).encode()).hexdigest()
def VrfyRSA(pk, n, sig, m):
    x = pow(sig, pk, n)
    return x == m
def SignRSA(sk, n, mes):
    return pow(mes, sk, n)
def EncRSA(pk, n, m):
    return pow(m, pk, n)
def DecRSA(sk, n, c):
    return pow(c, sk, n)

HOST = '127.0.0.1'
APORT = 50000
TPORT = 50001
VPORT = 50002
Aaddress = (HOST, APORT)
Taddress = (HOST, TPORT)
Vaddress = (HOST, VPORT)

s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)#UDP

skV = 35295413884813306056341405071039316586055354059299496782254213510348355185443123983385362634580103475746350420658826723119080046493608885036083959854536882814180852005902819939447811156337004855254981351404204982559349956063378916306545588550645219994739965098807262033075072739355627526159091089072220114497
nV = 103045061465119816420814623313466842974889065350334600882866820689045801576460531739982471087957779824037266906571522048870952824619193046089176555917289740853496830578959574096474869503541910902431252274445635740811955791366660975644356654925422661155337438137311849234892612563413316549393489910853147033989
pkV = 65537
CertV = 62234211574278407561863843420279631497585249042582301714857588559076936746053480759139529837253685667250572726233212003634577038580141887074922127431249974045949325879379015173710021520809309531001393758464974494680670575700049861082714368820013469860037495054667158730234594077217870367251681540548087553390

pkCert = 65537  
nCert = 106460729752036168105916381178474341247595425520394661988161810214747462705507433370673571214415148063991646624200418843920105542536486692379491997943902740539467523267804788711459532059924049782655724857503644303973606628932059884706993516808651531944588850975587203703350992449923997709115011828745180080291
#发布Cert的可信第三方

s.bind((HOST, VPORT))
voter = "X"

print("voting....")
s.sendto("REQUEST".encode(), Aaddress)
print('pkV : ', pkV)
s.sendto(str(pkV).encode(), Aaddress)
print('nV : ', nV)
s.sendto(str(nV).encode(), Aaddress)
print("CertV : ", CertV)
s.sendto(str(CertV).encode(), Aaddress)


IDC = int(s.recvfrom(1024)[0].decode(), 10)
print("IDC : ", IDC)
S = int(s.recvfrom(1024)[0].decode(), 10)
print("Sig_skT(hash(IDC)) : ", S)
pkT = int(s.recvfrom(1024)[0].decode(), 10)
print("pkT : ", pkT)
nT = int(s.recvfrom(1024)[0].decode(), 10)
print("nT : ", nT)
CertT = int(s.recvfrom(1024)[0].decode(), 10)
print("CertT : ", CertT)
if VrfyRSA(pkCert, nCert, CertT, pkT) == 0 or VrfyRSA(pkT, nT, S, int(hash(IDC), 16)) == 0:
    print("fail.")
    s.sendto("fail.".encode(), Taddress)

print("stop the voter...")